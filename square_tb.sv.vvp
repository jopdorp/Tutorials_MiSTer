#! /usr/local/bin/vvp
:ivl_version "11.0 (stable)" "(s20150603-1103-g348bc13a)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x55629d8ca1f0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x55629d8ca380 .scope module, "osc_tb" "osc_tb" 3 1;
 .timescale 0 0;
P_0x55629d8ca510 .param/l "CLOCK_FREQUENCY" 1 3 2, +C4<0000000000000000000000000000000000001101110000000000000000000000>;
v0x55629d90e280_0 .var "clk", 0 0;
v0x55629d90e340 .array/2s "expected_values", 0 1, 31 0;
v0x55629d90e3e0_0 .net/2s "out_counter", 31 0, v0x55629d90d890_0;  1 drivers
v0x55629d90e4b0_0 .var "set", 0 0;
v0x55629d90e580_0 .var/2s "set_counter", 31 0;
v0x55629d90e670_0 .var/2s "set_sample", 31 0;
v0x55629d90e740_0 .net/2s "square_value", 31 0, v0x55629d90d970_0;  1 drivers
v0x55629d90e810 .array/2s "voice_counters", 0 1, 31 0;
v0x55629d90e8b0 .array/2s "voice_samples", 0 1, 31 0;
v0x55629d90e950 .array/2s "voice_wave_lengths", 0 1, 31 0;
v0x55629d90ea10_0 .var/2s "wave_length_integer", 31 0;
S_0x55629d8ecc70 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 18, 3 18 0, S_0x55629d8ca380;
 .timescale 0 0;
v0x55629d8d1860_0 .var/2s "i", 31 0;
S_0x55629d90c160 .scope function.vec2.u32, "get_wave_length" "get_wave_length" 3 56, 3 56 0, S_0x55629d8ca380;
 .timescale 0 0;
v0x55629d90c360_0 .var/2s "frequency", 31 0;
; Variable get_wave_length is bool return value of scope S_0x55629d90c160
TD_osc_tb.get_wave_length ;
    %pushi/vec4 230686720, 0, 64;
    %load/vec4 v0x55629d90c360_0;
    %pad/s 64;
    %div/s;
    %cast2;
    %pad/s 32;
    %ret/vec4 0, 0, 32;  Assign to get_wave_length (store_vec4_to_lval)
    %disable S_0x55629d90c160;
    %end;
S_0x55629d90c520 .scope task, "run_and_assert" "run_and_assert" 3 103, 3 103 0, S_0x55629d8ca380;
 .timescale 0 0;
v0x55629d90c700_0 .var/2s "expected_value", 31 0;
TD_osc_tb.run_and_assert ;
    %delay 1, 0;
    %load/vec4 v0x55629d90e280_0;
    %nor/r;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %delay 1, 0;
    %load/vec4 v0x55629d90e280_0;
    %nor/r;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %delay 1, 0;
    %load/vec4 v0x55629d90e740_0;
    %load/vec4 v0x55629d90c700_0;
    %cmp/e;
    %jmp/0xz  T_1.0, 4;
    %jmp T_1.1;
T_1.0 ;
    %vpi_call/w 3 108 "$error", "The square_value is:%d , The value expected is:%d", v0x55629d90e740_0, v0x55629d90c700_0 {0 0 0};
T_1.1 ;
    %end;
S_0x55629d90c7e0 .scope task, "run_and_assert_two_voices" "run_and_assert_two_voices" 3 60, 3 60 0, S_0x55629d8ca380;
 .timescale 0 0;
TD_osc_tb.run_and_assert_two_voices ;
    %fork t_1, S_0x55629d90c9c0;
    %jmp t_0;
    .scope S_0x55629d90c9c0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55629d90cbc0_0, 0, 32;
T_2.2 ;
    %load/vec4 v0x55629d90cbc0_0;
    %cmpi/s 1, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_2.3, 5;
    %load/vec4 v0x55629d90cbc0_0;
    %muli 4, 0, 32;
    %pad/s 64;
    %muli 1, 0, 64;
    %ix/vec4 4;
    %delayx 4;
    %delay 1, 0;
    %load/vec4 v0x55629d90e280_0;
    %nor/r;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %delay 1, 0;
    %load/vec4 v0x55629d90e280_0;
    %nor/r;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %ix/getv/s 4, v0x55629d90cbc0_0;
    %load/vec4a v0x55629d90e8b0, 4;
    %assign/vec4 v0x55629d90e670_0, 0;
    %ix/getv/s 4, v0x55629d90cbc0_0;
    %load/vec4a v0x55629d90e810, 4;
    %assign/vec4 v0x55629d90e580_0, 0;
    %ix/getv/s 4, v0x55629d90cbc0_0;
    %load/vec4a v0x55629d90e950, 4;
    %assign/vec4 v0x55629d90ea10_0, 0;
    %delay 1, 0;
    %load/vec4 v0x55629d90e280_0;
    %nor/r;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %delay 1, 0;
    %load/vec4 v0x55629d90e280_0;
    %nor/r;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %load/vec4 v0x55629d90e740_0;
    %ix/getv/s 3, v0x55629d90cbc0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x55629d90e8b0, 0, 4;
    %load/vec4 v0x55629d90e3e0_0;
    %ix/getv/s 3, v0x55629d90cbc0_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0x55629d90e810, 0, 4;
    %load/vec4 v0x55629d90e740_0;
    %ix/getv/s 4, v0x55629d90cbc0_0;
    %load/vec4a v0x55629d90e340, 4;
    %cmp/e;
    %jmp/0xz  T_2.4, 4;
    %jmp T_2.5;
T_2.4 ;
    %vpi_call/w 3 75 "$error", "wave_length_integer is: %d , The counter is:%d , The square_value is:%d , The value expected is:%d", v0x55629d90ea10_0, &A<v0x55629d90e810, v0x55629d90cbc0_0 >, v0x55629d90e740_0, &A<v0x55629d90e340, v0x55629d90cbc0_0 > {0 0 0};
T_2.5 ;
    %delay 1, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x55629d90cbc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x55629d90cbc0_0, 0, 32;
    %jmp T_2.2;
T_2.3 ;
    %end;
    .scope S_0x55629d90c7e0;
t_0 %join;
    %end;
S_0x55629d90c9c0 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 61, 3 61 0, S_0x55629d90c7e0;
 .timescale 0 0;
v0x55629d90cbc0_0 .var/2s "i", 31 0;
S_0x55629d90ccc0 .scope module, "square_generator" "Square" 3 15, 4 1 0, S_0x55629d8ca380;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "set";
    .port_info 2 /INPUT 32 "set_sample";
    .port_info 3 /INPUT 32 "set_counter";
    .port_info 4 /INPUT 32 "wave_length";
    .port_info 5 /OUTPUT 32 "counter";
    .port_info 6 /OUTPUT 32 "out";
v0x55629d90d7b0_0 .net "clk", 0 0, v0x55629d90e280_0;  1 drivers
v0x55629d90d890_0 .var/2s "counter", 31 0;
v0x55629d90d970_0 .var/2s "out", 31 0;
v0x55629d90da30_0 .net "set", 0 0, v0x55629d90e4b0_0;  1 drivers
v0x55629d90daf0_0 .net "set_counter", 31 0, v0x55629d90e580_0;  1 drivers
v0x55629d90dc20_0 .net "set_sample", 31 0, v0x55629d90e670_0;  1 drivers
v0x55629d90dd00_0 .net "wave_length", 31 0, v0x55629d90ea10_0;  1 drivers
E_0x55629d8cec00 .event posedge, v0x55629d90d7b0_0;
S_0x55629d90cf30 .scope function.vec2.u32, "get_counter" "get_counter" 4 33, 4 33 0, S_0x55629d90ccc0;
 .timescale 0 0;
; Variable get_counter is bool return value of scope S_0x55629d90cf30
TD_osc_tb.square_generator.get_counter ;
    %load/vec4 v0x55629d90da30_0;
    %flag_set/vec4 8;
    %jmp/0 T_3.6, 8;
    %load/vec4 v0x55629d90daf0_0;
    %jmp/1 T_3.7, 8;
T_3.6 ; End of true expr.
    %load/vec4 v0x55629d90d890_0;
    %jmp/0 T_3.7, 8;
 ; End of false expr.
    %blend;
T_3.7;
    %cast2;
    %ret/vec4 0, 0, 32;  Assign to get_counter (store_vec4_to_lval)
    %disable S_0x55629d90cf30;
    %end;
S_0x55629d90d230 .scope function.vec2.u32, "get_sample" "get_sample" 4 29, 4 29 0, S_0x55629d90ccc0;
 .timescale 0 0;
; Variable get_sample is bool return value of scope S_0x55629d90d230
TD_osc_tb.square_generator.get_sample ;
    %load/vec4 v0x55629d90da30_0;
    %flag_set/vec4 8;
    %jmp/0 T_4.8, 8;
    %load/vec4 v0x55629d90dc20_0;
    %jmp/1 T_4.9, 8;
T_4.8 ; End of true expr.
    %load/vec4 v0x55629d90d970_0;
    %jmp/0 T_4.9, 8;
 ; End of false expr.
    %blend;
T_4.9;
    %cast2;
    %ret/vec4 0, 0, 32;  Assign to get_sample (store_vec4_to_lval)
    %disable S_0x55629d90d230;
    %end;
S_0x55629d90d510 .scope function.vec2.s1, "should_flip_state" "should_flip_state" 4 25, 4 25 0, S_0x55629d90ccc0;
 .timescale 0 0;
; Variable should_flip_state is bool return value of scope S_0x55629d90d510
TD_osc_tb.square_generator.should_flip_state ;
    %load/vec4 v0x55629d90dd00_0;
    %pushi/vec4 2, 0, 32;
    %div;
    %callf/vec4 TD_osc_tb.square_generator.get_counter, S_0x55629d90cf30;
    %cmp/u;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %cast2;
    %ret/vec4 0, 0, 1;  Assign to should_flip_state (store_vec4_to_lval)
    %disable S_0x55629d90d510;
    %end;
S_0x55629d90dec0 .scope task, "test_single_voice" "test_single_voice" 3 82, 3 82 0, S_0x55629d8ca380;
 .timescale 0 0;
TD_osc_tb.test_single_voice ;
    %pushi/vec4 57671680, 0, 32;
    %store/vec4 v0x55629d90c360_0, 0, 32;
    %callf/vec4 TD_osc_tb.get_wave_length, S_0x55629d90c160;
    %store/vec4 v0x55629d90ea10_0, 0, 32;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 115343360, 0, 32;
    %store/vec4 v0x55629d90c360_0, 0, 32;
    %callf/vec4 TD_osc_tb.get_wave_length, S_0x55629d90c160;
    %store/vec4 v0x55629d90ea10_0, 0, 32;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 57671680, 0, 32;
    %store/vec4 v0x55629d90c360_0, 0, 32;
    %callf/vec4 TD_osc_tb.get_wave_length, S_0x55629d90c160;
    %store/vec4 v0x55629d90ea10_0, 0, 32;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %store/vec4 v0x55629d90c700_0, 0, 32;
    %fork TD_osc_tb.run_and_assert, S_0x55629d90c520;
    %join;
    %end;
S_0x55629d90e0a0 .scope task, "test_two_voices" "test_two_voices" 3 33, 3 33 0, S_0x55629d8ca380;
 .timescale 0 0;
TD_osc_tb.test_two_voices ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55629d90e4b0_0, 0, 1;
    %pushi/vec4 57671680, 0, 32;
    %store/vec4 v0x55629d90c360_0, 0, 32;
    %callf/vec4 TD_osc_tb.get_wave_length, S_0x55629d90c160;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e950, 4, 0;
    %pushi/vec4 115343360, 0, 32;
    %store/vec4 v0x55629d90c360_0, 0, 32;
    %callf/vec4 TD_osc_tb.get_wave_length, S_0x55629d90c160;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e950, 4, 0;
    %pushi/vec4 1048576, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %pushi/vec4 4293918720, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %fork TD_osc_tb.run_and_assert_two_voices, S_0x55629d90c7e0;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %pushi/vec4 1048576, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %fork TD_osc_tb.run_and_assert_two_voices, S_0x55629d90c7e0;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %fork TD_osc_tb.run_and_assert_two_voices, S_0x55629d90c7e0;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %pushi/vec4 1048576, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %fork TD_osc_tb.run_and_assert_two_voices, S_0x55629d90c7e0;
    %join;
    %pushi/vec4 4293918720, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %fork TD_osc_tb.run_and_assert_two_voices, S_0x55629d90c7e0;
    %join;
    %pushi/vec4 1048576, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %pushi/vec4 4293918720, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55629d90e340, 4, 0;
    %fork TD_osc_tb.run_and_assert_two_voices, S_0x55629d90c7e0;
    %join;
    %end;
    .scope S_0x55629d90ccc0;
T_8 ;
    %pushi/vec4 4293918720, 0, 32;
    %store/vec4 v0x55629d90d970_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v0x55629d90d890_0, 0, 32;
    %end;
    .thread T_8;
    .scope S_0x55629d90ccc0;
T_9 ;
    %wait E_0x55629d8cec00;
    %callf/vec4 TD_osc_tb.square_generator.should_flip_state, S_0x55629d90d510;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.0, 8;
    %callf/vec4 TD_osc_tb.square_generator.get_sample, S_0x55629d90d230;
    %muli 4294967295, 0, 32;
    %cast2;
    %assign/vec4 v0x55629d90d970_0, 0;
    %pushi/vec4 1, 0, 32;
    %assign/vec4 v0x55629d90d890_0, 0;
    %jmp T_9.1;
T_9.0 ;
    %callf/vec4 TD_osc_tb.square_generator.get_sample, S_0x55629d90d230;
    %assign/vec4 v0x55629d90d970_0, 0;
    %callf/vec4 TD_osc_tb.square_generator.get_counter, S_0x55629d90cf30;
    %addi 1, 0, 32;
    %cast2;
    %assign/vec4 v0x55629d90d890_0, 0;
T_9.1 ;
    %jmp T_9;
    .thread T_9;
    .scope S_0x55629d8ca380;
T_10 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55629d90e280_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55629d90e4b0_0, 0, 1;
    %pushi/vec4 57671680, 0, 32;
    %store/vec4 v0x55629d90c360_0, 0, 32;
    %callf/vec4 TD_osc_tb.get_wave_length, S_0x55629d90c160;
    %store/vec4 v0x55629d90ea10_0, 0, 32;
    %end;
    .thread T_10, $init;
    .scope S_0x55629d8ca380;
T_11 ;
    %fork t_3, S_0x55629d8ecc70;
    %jmp t_2;
    .scope S_0x55629d8ecc70;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55629d8d1860_0, 0, 32;
T_11.0 ;
    %load/vec4 v0x55629d8d1860_0;
    %cmpi/s 1, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_11.1, 5;
    %pushi/vec4 1048576, 0, 32;
    %ix/getv/s 4, v0x55629d8d1860_0;
    %store/vec4a v0x55629d90e8b0, 4, 0;
    %pushi/vec4 1, 0, 32;
    %ix/getv/s 4, v0x55629d8d1860_0;
    %store/vec4a v0x55629d90e810, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x55629d8d1860_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x55629d8d1860_0, 0, 32;
    %jmp T_11.0;
T_11.1 ;
    %end;
    .scope S_0x55629d8ca380;
t_2 %join;
    %fork TD_osc_tb.test_single_voice, S_0x55629d90dec0;
    %join;
    %fork TD_osc_tb.test_two_voices, S_0x55629d90e0a0;
    %join;
    %end;
    .thread T_11;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "square_tb.sv";
    ".//Square.sv";
